name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ovotime_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'yarn'
    
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    
    - name: Run linting
      run: yarn lint
    
    - name: Run type checking
      run: yarn build --dry-run || npx tsc --noEmit
    
    - name: Run tests
      run: yarn test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ovotime_test
        NODE_ENV: test
    
    - name: Build application
      run: yarn build
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ovotime_test
        NODE_ENV: production
        SKIP_ENV_VALIDATION: true

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'yarn'
    
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    
    - name: Run security audit
      run: yarn audit --audit-level moderate
    
    - name: Check for vulnerabilities
      run: npx audit-ci --moderate 